blueprint:
  name: Night lights 2
  description: "Turn a device on near sunset and off near sunrise.\n\
    Optionally turn off during rain and based on temperature."
  domain: automation
  source_url: https://gist.github.com/networkingcat/a1876d7e706e07c8bdcf974113940fb8
  input:
    target_device:
      name: Target
      description: The device to turn on and off
      selector:
        entity:
          domain:
            - light
            - switch
          multiple: true
    start_offset:
      name: Turn on offset
      description: The time to turn on the device, relative to sunset
      selector:
        number:
          min: -90
          max: 90
          unit_of_measurement: min
          step: 1
          mode: slider 
    stop_offset:
      name: Turn off offset
      description: The time to turn off the devie, relative to sunrise
      selector:
        number:
          min: -90
          max: 90
          unit_of_measurement: min
          step: 1
          mode: slider
    rain_blocker:
      name: Turn off while raining
      description: Turn off the device while it is raining
      default: false
      selector:
        boolean: {}
    minimum_temperature:
      name: Minimum temperature (optional)
      description: Turn off the device if the temperature is below this value
      selector:
        number:
          min: -10
          max: 100
          unit_of_measurement: Â°F
          step: 1
          mode: slider

variables:
  rain_blocker: !input rain_blocker
  target_device: !input "target_device"
  start_time: !input "start_time"
  stop_time: !input "stop_time"
  minimum_temperature: !input "minimum_temperature"

trigger_variables:
  t_start_offset: !input start_offset
  t_start_offset_seconds: "{{ (t_start_offset * 60) | int }}"
  t_stop_offset: !input stop_offset
  t_stop_offset_seconds: "{{ (t_stop_offset * 60) | int }}"

trigger:
    # the start time has been reached
  - platform: sun
    event: sunset
    offset: "{{ t_start_offset_seconds }}"

    # the stop time has been reached
  - platform: sun
    event: sunrise
    offset: "{{ t_stop_offset_seconds }}"

    # rain has started
  - platform: numeric_state
    entity_id: sensor.weewx_rainrate_in_per_hour
    above: '0'
    # it has reached the temperature to turn off the device
  - platform: numeric_state
    entity_id: sensor.weewx_outtemp_f
    below: !input "minimum_temperature"
    # rain has stopped
  - platform: numeric_state
    entity_id: sensor.weewx_rainrate_in_per_hour
    below: '0.001'
    # it is warmer than the minimum temperature
  - platform: numeric_state
    entity_id: sensor.weewx_outtemp_f
    value_template: "{{ states('sensor.weewx_outtemp_f') | int - 3 }}" 
    above: !input "minimum_temperature"

condition:
  - condition: state
    entity_id: binary_sensor.vacation_mode
    state: 'off'

action:
  - choose:
    - conditions:
        # too cold
      - condition: numeric_state
        entity_id: sensor.weewx_outtemp_f
        below: !input "minimum_temperature"
      sequence:
        - service: homeassistant.turn_off
          data: {}
          target:
            entity_id: !input "target_device"
    - conditions:
        # rain starting
      - condition: numeric_state
        entity_id: sensor.weewx_rainrate_in_per_hour
        above: '0'
      - "{{ rain_blocker == 'on' }}"
      sequence:
        - service: homeassistant.turn_off
          data: {}
          target:
            entity_id: !input "target_device"     
    - conditions:
        #sun rising
      - condition: numeric_state
        entity_id: sun.sun
        attribute: elevation
        above: !input "stop_elevation"
      - condition: state
        entity_id: sun.sun
        attribute: rising
        state: true
      sequence:
        - service: homeassistant.turn_off
          data: {}
          target:
            entity_id: !input "target_device"
    - conditions:
        # sun setting
      - condition: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: !input "start_elevation"
      - condition: numeric_state
        entity_id: sensor.weewx_outtemp_f
        above: !input "minimum_temperature"
      sequence:
        - if:
            - condition: numeric_state
              entity_id: sensor.weewx_rainrate_in_per_hour
              above: '0'
          then:
            - if:
                - "{{ rain_blocker == 'off' }}"
              then:
                - service: homeassistant.turn_on
                  data: {}
                  target:
                    entity_id: !input "target_device"
              else:
                - service: homeassistant.turn_off
                  data: {}
                  target:
                    entity_id: !input "target_device"          
          else:
            - service: homeassistant.turn_on
              data: {}
              target:
                entity_id: !input "target_device"         
    default: []
    
